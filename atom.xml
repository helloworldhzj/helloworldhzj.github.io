<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>贺子骏的博客</title>
  
  <subtitle>1195529182</subtitle>
  <link href="https://helloworldhzj.github.io/atom.xml" rel="self"/>
  
  <link href="https://helloworldhzj.github.io/"/>
  <updated>2023-10-28T08:05:42.772Z</updated>
  <id>https://helloworldhzj.github.io/</id>
  
  <author>
    <name>贺子骏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php语言学习笔记</title>
    <link href="https://helloworldhzj.github.io/2023/10/28/php%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://helloworldhzj.github.io/2023/10/28/php%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-10-28T08:01:05.000Z</published>
    <updated>2023-10-28T08:05:42.772Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 脚本在服务器上执行</p><h2 id="什么是-PHP-文件？"><a href="#什么是-PHP-文件？" class="headerlink" title="什么是 PHP 文件？"></a>什么是 PHP 文件？</h2><ul><li>PHP 文件能够包含文本、HTML、CSS 以及 PHP 代码</li><li>PHP 代码在服务器上执行，而结果以纯文本返回浏览器</li></ul><h2 id="PHP-能够做什么？"><a href="#PHP-能够做什么？" class="headerlink" title="PHP 能够做什么？"></a>PHP 能够做什么？</h2><ul><li>PHP 能够生成动态页面内容</li><li>PHP 能够创建、打开、读取、写入、删除以及关闭服务器上的文件</li><li>PHP 能够接收表单数据</li><li>PHP 能够发送并取回 cookies</li><li>PHP 能够添加、删除、修改数据库中的数据</li><li>PHP 能够限制用户访问网站中的某些页面</li><li>PHP 能够对数据进行加密</li></ul><p>PHP 脚本以 <?php 开头，以 ?> 结尾</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;我的第一张 PHP 页面&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">echo &quot;Hello World!&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="PHP-大小写敏感"><a href="#PHP-大小写敏感" class="headerlink" title="PHP 大小写敏感"></a>PHP 大小写敏感</h2><p>在php中,函数\类\关键词\对大小写不敏感</p><p>变量对大小写敏感</p><h3 id="PHP-变量规则："><a href="#PHP-变量规则：" class="headerlink" title="PHP 变量规则："></a>PHP 变量规则：</h3><ul><li>变量以 $ 符号开头，其后是变量的名称</li><li>变量名称必须以字母或下划线开头</li><li>变量名称不能以数字开头</li><li>变量名称只能包含字母数字字符和下划线（A-z、0-9 以及 _）</li><li>变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）</li></ul><h2 id="PHP-static-关键词"><a href="#PHP-static-关键词" class="headerlink" title="PHP static 关键词"></a>PHP static 关键词</h2><p>通常，当函数完成&#x2F;执行后，会删除所有变量。不过，有时我需要不删除某个局部变量。实现这一点需要更进一步的工作。</p><p>在首次声明变量时使用 <em>static</em> 关键词：</p><p>然后，每当函数被调用时，这个变量所存储的信息都是函数最后一次被调用时所包含的信息。</p><p>注释：该变量仍然是函数的局部变量。</p><h2 id="PHP-echo-和-print-语句"><a href="#PHP-echo-和-print-语句" class="headerlink" title="PHP echo 和 print 语句"></a>PHP echo 和 print 语句</h2><p>echo 和 print 之间的差异：</p><ul><li>echo - 能够输出一个以上的字符串</li><li>print - 只能输出一个字符串，并始终返回 1</li></ul><p>提示：echo 比 print 稍快，因为它不返回任何值(字符串中能包含HTML标记)</p><p>php数据类型包括String（字符串）, Integer（整型）, Float（浮点型）, Boolean（布尔型）, Array（数组）, Object（对象）, NULL（空值）</p><p>对象必须声明,用class关键字声明类对象,类是可以包含属性和方法的结构</p><p><strong>PHP中的常量是什么？</strong></p><p>常量是一个简单值的标识符（名字）。常量值被定义后，在脚本的其他任何地方都不能被改变。默认是全局变量，可以在整个运行的脚本的任何地方使用</p><h2 id="设置-PHP-常量"><a href="#设置-PHP-常量" class="headerlink" title="设置 PHP 常量"></a>设置 PHP 常量</h2><p>设置常量，使用 define() 函数，函数语法如下：</p><p>bool define ( string $name , mixed $value [, bool $case_insensitive &#x3D; false ] )</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">该函数有三个参数:</span><br></pre></td></tr></table></figure><ul><li><strong>name：</strong>必选参数，常量名称，即标志符。</li><li><strong>value：</strong>必选参数，常量的值。</li><li><strong>case_insensitive</strong> ：可选参数，如果设置为 TRUE，该常量则大小写不敏感。默认是大小写敏感的</li></ul><p><strong>php字符串变量用于存储并处理文本</strong></p><p>可以在直接在函数中使用字符串,或者存储在变量中</p><h2 id="PHP-并置运算符"><a href="#PHP-并置运算符" class="headerlink" title="PHP 并置运算符"></a>PHP 并置运算符</h2><p>并置运算符 (.) 用于把两个字符串值连接起来<img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230817222114892-1221127140.png" alt="img"></p><p>这里是用.”空格”.</p><h2 id="PHP-strlen-函数"><a href="#PHP-strlen-函数" class="headerlink" title="PHP strlen() 函数"></a>PHP strlen() 函数</h2><p>strlen() 函数返回字符串的长度（字符数）</p><h2 id="PHP-strpos-函数"><a href="#PHP-strpos-函数" class="headerlink" title="PHP strpos() 函数"></a>PHP strpos() 函数</h2><p>用于在字符串内查找一个字符或一段指定的文本,如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果未找到匹配，则返回 FALSE.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230817222322116-2137425672.png" alt="img"></p><h1 id="PHP-运算符"><a href="#PHP-运算符" class="headerlink" title="PHP 运算符"></a>PHP 运算符</h1><p>php运算符包括算数运算符、赋值运算符、递增\递减运算符、比较运算符、逻辑运算符、数组运算符、三元运算符、组合比较符</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230817222833614-108190875.png" alt="img"></p><p>a xor b xor(异或符) 描述:如果ab中有且仅有一个为ture,则返回ture</p><p>a &amp;&amp; b     与    如果ab都为ture,则返回ture</p><p>&#x3D;&#x3D;&#x3D;恒等还需类型相同</p><p>a&lt;&#x3D;&gt;b比较运算符,ab若相等0,a&gt;b返回-1.a&lt;b返回1</p><p>if,else,Switch与c语言大致相同,故不做阐述</p><p><strong>php数组是什么意思？</strong></p><p>php数组，特点是将values映射到keys的类型。与其他语言不同的是，PHP中数组的key可以是字符串，而values可以是任意类型。</p><h2 id="PHP-关联数组"><a href="#PHP-关联数组" class="headerlink" title="PHP 关联数组"></a>PHP 关联数组</h2><p>关联数组是使用您分配给数组的指定的键的数组。</p><p>这里有两种创建关联数组的方法：</p><p>$age&#x3D;array(“Peter”&#x3D;&gt;”35”,”Ben”&#x3D;&gt;”37”,”Joe”&#x3D;&gt;”43”);</p><p>or:</p><p>$age[‘Peter’]&#x3D;”35”;<br>$age[‘Ben’]&#x3D;”37”;<br>$age[‘Joe’]&#x3D;”43”;</p><p><strong>PHP数组排序函数方法有：sort()、rsort() 、asort() 、ksort()、arsort()、krsort()</strong></p><ul><li>sort() - 对数组进行升序排列</li><li>rsort() - 对数组进行降序排列</li><li>asort() - 根据关联数组的值，对数组进行升序排列</li><li>ksort() - 根据关联数组的键，对数组进行升序排列</li><li>arsort() - 根据关联数组的值，对数组进行降序排列</li><li>krsort() - 根据关联数组的键，对数组进行降序排列</li></ul><h1 id="PHP-超级全局变量"><a href="#PHP-超级全局变量" class="headerlink" title="PHP 超级全局变量"></a>PHP 超级全局变量</h1><p>PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的</p><p>有: $GLOBALS 、$_SERVER 、$_REQUEST 、$_POST、$_GET 、$_FILES、$_ENV、$_COOKIE、$_SESSION全部作用域中都可用</p><p>$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script locations)等等信息的数组。这个数组中的项目由 Web 服务器创建。不能保证每个服务器都提供全部项目；服务器可能会忽略一些，或者提供一些没有在这里列举出来的项目。</p><table><thead><tr><th>元素&#x2F;代码</th><th>描述</th></tr></thead><tbody><tr><td>$_SERVER[‘PHP_SELF’]</td><td>当前执行脚本的文件名，与 document root 有关。例如，在地址为 <a href="http://example.com/test.php/foo.bar">http://example.com/test.php/foo.bar</a> 的脚本中使用 $<em>SERVER[‘PHP_SELF’] 将得到 &#x2F;test.php&#x2F;foo.bar。__FILE</em>_ 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</td></tr><tr><td>$_SERVER[‘GATEWAY_INTERFACE’]</td><td>服务器使用的 CGI 规范的版本；例如，”CGI&#x2F;1.1”。</td></tr><tr><td>$_SERVER[‘SERVER_ADDR’]</td><td>当前运行脚本所在的服务器的 IP 地址。</td></tr><tr><td>$_SERVER[‘SERVER_NAME’]</td><td>当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。</td></tr><tr><td>$_SERVER[‘SERVER_SOFTWARE’]</td><td>服务器标识字符串，在响应请求时的头信息中给出。 (如：Apache&#x2F;2.2.24)</td></tr><tr><td>$_SERVER[‘SERVER_PROTOCOL’]</td><td>请求页面时通信协议的名称和版本。例如，”HTTP&#x2F;1.0”。</td></tr><tr><td>$_SERVER[‘REQUEST_METHOD’]</td><td>访问页面使用的请求方法；例如，”GET”, “HEAD”，”POST”，”PUT”。</td></tr><tr><td>$_SERVER[‘REQUEST_TIME’]</td><td>请求开始时的时间戳。从 PHP 5.1.0 起可用。 (如：1377687496)</td></tr><tr><td>$_SERVER[‘QUERY_STRING’]</td><td>query string（查询字符串），如果有的话，通过它进行页面访问。</td></tr></tbody></table><table><thead><tr><th>$_SERVER[‘HTTP_ACCEPT’]</th><th>当前请求头中 Accept: 项的内容，如果存在的话。</th></tr></thead><tbody><tr><td>$_SERVER[‘HTTP_ACCEPT_CHARSET’]</td><td>当前请求头中 Accept-Charset: 项的内容，如果存在的话。例如：”iso-8859-1,*,utf-8”。</td></tr><tr><td>$_SERVER[‘HTTP_HOST’]</td><td>当前请求头中 Host: 项的内容，如果存在的话。</td></tr><tr><td>$_SERVER[‘HTTP_REFERER’]</td><td>引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改 HTTP_REFERER 的功能。简言之，该值并不可信。)</td></tr><tr><td>$_SERVER[‘HTTPS’]</td><td>如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</td></tr><tr><td>$_SERVER[‘REMOTE_ADDR’]</td><td>浏览当前页面的用户的 IP 地址。</td></tr><tr><td>$_SERVER[‘REMOTE_HOST’]</td><td>浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 REMOTE_ADDR。</td></tr><tr><td>$_SERVER[‘REMOTE_PORT’]</td><td>用户机器上连接到 Web 服务器所使用的端口号。</td></tr><tr><td>$_SERVER[‘SCRIPT_FILENAME’]</td><td>当前执行脚本的绝对路径。</td></tr><tr><td>$_SERVER[‘SERVER_ADMIN’]</td><td>该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。(如：<a href="mailto:&#115;&#x6f;&#109;&#x65;&#111;&#110;&#x65;&#64;&#x70;&#x68;&#x70;&#x2e;&#x63;&#110;">&#115;&#x6f;&#109;&#x65;&#111;&#110;&#x65;&#64;&#x70;&#x68;&#x70;&#x2e;&#x63;&#110;</a>)</td></tr></tbody></table><table><thead><tr><th>$_SERVER[‘SERVER_PORT’]</th><th>Web 服务器使用的端口。默认值为 “80”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。</th></tr></thead><tbody><tr><td>$_SERVER[‘SERVER_SIGNATURE’]</td><td>包含了服务器版本和虚拟主机名的字符串。</td></tr><tr><td>$_SERVER[‘PATH_TRANSLATED’]</td><td>当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。</td></tr><tr><td>$_SERVER[‘SCRIPT_NAME’]</td><td>包含当前脚本的路径。这在页面需要指向自己时非常有用。<strong>FILE</strong> 常量包含当前脚本(例如包含文件)的完整路径和文件名。</td></tr><tr><td>$_SERVER[‘SCRIPT_URI’]</td><td>URI 用来指定要访问的页面。例如 “&#x2F;index.html”。</td></tr></tbody></table><p><strong>$_REQUEST</strong> 用于收集HTML表单提交的数据。</p><p>以下实例显示了一个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_REQUEST 来收集表单中的 input 字段数据:</p><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo $_SERVER[&#x27;PHP_SELF&#x27;];?&gt;&quot;&gt;</span><br><span class="line">Name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">$name = $_REQUEST[&#x27;fname&#x27;]; </span><br><span class="line">echo $name; </span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>$_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method&#x3D;”post”。</p><p>以下实例显示了一个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时, 表单数据将发送至<form>标签中 action 属性中指定的脚本文件。 在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量 $_POST 来收集表单中的 input 字段数据:</p><p>实例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo $_SERVER[&#x27;PHP_SELF&#x27;];?&gt;&quot;&gt;</span><br><span class="line">Name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">$name = $_POST[&#x27;fname&#x27;]; </span><br><span class="line">echo $name; </span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol><li><code>&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;];?&gt;&quot;&gt;</code><ul><li>这是一个 HTML 表单标签。它用于创建一个用户输入的表单。</li><li><code>method=&quot;post&quot;</code>：指定了提交表单时使用的 HTTP 方法为 POST。POST 方法用于向服务器发送数据。</li><li><code>action=&quot;&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;];?&gt;</code>：<code>action</code> 属性定义了表单提交后数据应该发送到的 URL。<code>&lt;?php echo $_SERVER[&#39;PHP_SELF&#39;];?&gt;</code> 是一个 PHP 代码片段，它会将表单数据提交到当前页面的 URL。这意味着数据将被发送回到相同的页面进行处理。</li></ul></li><li><code>Name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;</code><ul><li>这是一个文本输入字段，用于用户输入姓名。<code>name=&quot;fname&quot;</code> 定义了该输入字段的名称，这将用于在提交表单时将输入数据发送到服务器。</li></ul></li><li><code>&lt;input type=&quot;submit&quot;&gt;</code><ul><li>这是一个提交按钮。当用户点击此按钮时，表单数据将被提交到服务器以进行处理。</li></ul></li><li><code>&lt;?php $name = $_POST[&#39;fname&#39;]; echo $name; ?&gt;</code><ul><li>这是一段嵌入在 HTML 中的 PHP 代码，用于处理表单提交后的数据。</li><li><code>$name = $_POST[&#39;fname&#39;];</code>：这一行代码从 <code>$_POST</code> 超全局数组中获取名为 <code>fname</code> 的值，也就是用户在文本框中输入的姓名，并将其赋值给变量 <code>$name</code>。</li><li><code>echo $name;</code>：这一行代码使用 <code>echo</code> 函数将变量 <code>$name</code> 的值输出到页面上。这将在用户提交表单后，在页面上显示用户输入的姓名。</li></ul></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">for 循环同c</span><br><span class="line">foreach循环</span><br><span class="line">用于遍历数组</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">$x=array(&quot;one&quot;,&quot;two&quot;,&quot;three&quot;);</span><br><span class="line">foreach ($x as $value)</span><br><span class="line"></span><br><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">  echo $value . &quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="PHP-函数"><a href="#PHP-函数" class="headerlink" title="PHP 函数"></a>PHP 函数</h1><p>PHP 的真正威力源自于它的函数。 在 PHP 中，提供了超过 1000 个内建的函数。函数是通过调用函数来执行的。 你可以在页面的任何位置调用函数。</p><h2 id="创建-PHP-函数"><a href="#创建-PHP-函数" class="headerlink" title="创建 PHP 函数"></a>创建 PHP 函数</h2><p>函数是通过调用函数来执行的。</p><ul><li>函数名称以字母或下划线开头（不能以数字开头）</li></ul><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>function <em>functionName</em>()<br>{<br><em>要执行的代码</em>;<br>}</p><h2 id="PHP-函数-添加参数"><a href="#PHP-函数-添加参数" class="headerlink" title="PHP 函数 - 添加参数"></a>PHP 函数 - 添加参数</h2><p>为了给函数添加更多的功能，我们可以添加参数。参数类似变量。</p><p>参数就在函数名称后面有一个括号内指定。</p><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h3><p>下面的实例将输出不同的名字，但姓是相同的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function writeName($fname)</span><br><span class="line">&#123;</span><br><span class="line">echo $fname . &quot; Refsnes.&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;My name is &quot;;</span><br><span class="line">writeName(&quot;Kai Jim&quot;);</span><br><span class="line">echo &quot;My sister&#x27;s name is &quot;;</span><br><span class="line">writeName(&quot;Hege&quot;);</span><br><span class="line">echo &quot;My brother&#x27;s name is &quot;;</span><br><span class="line">writeName(&quot;Stale&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><p>My name is Kai Jim Refsnes.<br>My sister’s name is Hege Refsnes.<br>My brother’s name is Stale Refsnes.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">function writeName($fname,$punctuation)</span><br><span class="line">&#123;</span><br><span class="line">echo $fname . &quot; Refsnes&quot; . $punctuation . &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;My name is &quot;;</span><br><span class="line">writeName(&quot;Kai Jim&quot;,&quot;.&quot;);</span><br><span class="line">echo &quot;My sister&#x27;s name is &quot;;</span><br><span class="line">writeName(&quot;Hege&quot;,&quot;!&quot;);</span><br><span class="line">echo &quot;My brother&#x27;s name is &quot;;</span><br><span class="line">writeName(&quot;Ståle&quot;,&quot;?&quot;);</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><p>My name is Kai Jim Refsnes.<br>My sister’s name is Hege Refsnes!<br>My brother’s name is Ståle Refsnes?</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP 脚本在服务器上执行&lt;/p&gt;
&lt;h2 id=&quot;什么是-PHP-文件？&quot;&gt;&lt;a href=&quot;#什么是-PHP-文件？&quot; class=&quot;headerlink&quot; title=&quot;什么是 PHP 文件？&quot;&gt;&lt;/a&gt;什么是 PHP 文件？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PHP 文件能</summary>
      
    
    
    
    
    <category term="学习" scheme="https://helloworldhzj.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>数学建模经验</title>
    <link href="https://helloworldhzj.github.io/2023/10/28/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BB%8F%E9%AA%8C/"/>
    <id>https://helloworldhzj.github.io/2023/10/28/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BB%8F%E9%AA%8C/</id>
    <published>2023-10-28T07:59:58.000Z</published>
    <updated>2023-10-28T08:05:53.552Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-0"><a href="#1-0" class="headerlink" title="1-0"></a>1-0</h2><p>论文写作 matlab入门 数据预处理 公示编辑 图与表格 画图 常见函数 编程语法 函数与脚本</p><p>赛题: 优化类 预测类 评价决策类 NP-hard类</p><p>优化类:最优最短最合适,线性规划,非线性规划,最短路径,最小生成树,动态规划</p><p>预测类:短&#x2F;长期和周期,灰色预测,时间序列,回归分析,支持向量机,神经网络预测,马尔科夫链</p><p>评价决策类:孰优孰劣,层次分析,topsis法,灰色关联分析,模糊综合分析,主成分分析,聚类分析</p><p>NP-hard类:无法求最优解,蚁群算法,粒子群算法,遗传算法,模拟退火</p><h2 id="1-1赛前准备"><a href="#1-1赛前准备" class="headerlink" title="1-1赛前准备"></a>1-1赛前准备</h2><p>生成了md5码之后,不能再碰文件</p><p>abc三道题选择一个,获奖率0.698%,二等奖2.87%</p><p>软件安装和队友同一版本</p><p>软件:</p><p>Mathpix:截图即可获得公示编辑</p><p>AxGlyph:学术绘图,比MATLAB和excle高效</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ol><li>规律作息,赛前不熬夜</li><li>找好场地,最好能保证周六通宵</li></ol><p>找能够说话讨论的地方,确保有插座.充电器</p><ol><li>若比赛期间有私事,体现和队友协商好</li></ol><p>避免个人私事影响团队合作.周五的课,能尽量请假就尽量请假</p><ol><li>放低心态</li></ol><h3 id="赛题选择"><a href="#赛题选择" class="headerlink" title="赛题选择"></a>赛题选择</h3><p>·A题偏向物理、工程类</p><p>专业性较强，往往有标准答案，非本专业不建议选择</p><p>需要根据物理定理使用微分方程和偏微分方程模型</p><p>神经网络，遗传算法等求解较优解的启发式算法一般不适用</p><p>热力学等物理题可以先建立一个非常简陋的模型，再根据题目中的要求，一点一点的改进</p><p>·B题由于近两年改革，题型不定，19年物理类，20年运筹优化类</p><p>·C题偏向经管，运筹，统计，数据分析类</p><p>赛题较开放易读懂，运筹优化类问题一般没有严格最优解，结果合理即可，数据往往需要自己找</p><p>万一做到一半发现做不出来,即使瞎编也要编完一整篇论文交上去</p><h3 id="搜索技巧"><a href="#搜索技巧" class="headerlink" title="搜索技巧:"></a>搜索技巧:</h3><p>·完全匹配搜索：查询词的外边加上双引号“”</p><p>引号中英文都可，例如搜索“CT参数标定”，得到的结果不是分别带有“CT”或“参数标定”的网页</p><p>·标题必包含关键词：查询词前加上intitle：</p><p>冒号为英文输入下的</p><p>例如搜索intitle：CT参数标定，则搜索结果里每一个标题都会带有“CT参数标定”</p><p>·搜索文档：例如查询词后空格再输入福filetype：文件格式（doc&#x2F;pdf&#x2F;xls等等）</p><p>例如搜索：线性规划filetype：pdf</p><p>得到的就是pdf版的资料</p><p>·去掉不想要的：查询词后面加空格后加减号与关键词</p><p>例如搜索后不想看百度文库的东西，搜索 线性规划 filetype：pdf -百度文库</p><h3 id="知网"><a href="#知网" class="headerlink" title="知网"></a>知网</h3><p>·先看知网的硕博士论文</p><p>硕博论文会对研究的问题有详细的背景和基础知识介绍，可以帮助我们快速理解题目</p><p>按照被引顺序</p><p>·高级检索:想了解神经网络在信贷策略中的应用,想找一些相关的硕博论文</p><ol><li>进入高级检索界面,+和-可以自定义增加和减少检索字段</li><li>主题为:企业信贷</li><li>Or主题为:信贷决策</li><li>And关键词:神经网络,词频设置为”模糊”.模糊是输入的检索词在检索结果中出现即可,子序,字间间隔可以产生变化.</li><li>检索结果可按”相关度’’或者”被引”排序</li></ol><h3 id="去哪找数据"><a href="#去哪找数据" class="headerlink" title="去哪找数据"></a>去哪找数据</h3><p>查数据平台</p><p>优先在知网&#x2F;谷歌学术平台搜索</p><p>·国家统计局</p><p>其他国家部门网站大多都有数据分页，如果需要可另行查找</p><p>·awesome-public-datasets</p><p>Github上的一个项目，包含了经济，地理，能源，等所有领域的数据</p><p>·EPSDATA平台</p><p>收费</p><p>其他：国家信息中心，kaggle，和鲸社区</p><h2 id="1-6数据预处理"><a href="#1-6数据预处理" class="headerlink" title="1-6数据预处理"></a><strong>1-6数据预处理</strong></h2><h3 id="缺失值"><a href="#缺失值" class="headerlink" title="缺失值"></a><strong>缺失值</strong></h3><p>·比赛提供的数据，发现有些单元格是null或空的</p><p>·缺失过多：例如调查人口信息，发现“年龄”这一项缺失了40%，就直接把该项目指标删除</p><p>·最简单处理：均值、众数插补</p><p> ·定量数据，例如关于一群人的身高、年龄等数据，用整体的均值来补缺失</p><p> ·定性数据，例如关于一群人的性别、文化程度；某些事件调查的满意度，用出现次数最多的值来补缺失</p><p>·适用赛题：人口的数量年龄，经济产业情况等统计数据，对个体精度要求不大的数据</p><p>·Newton插值法</p><p>根据固定公示，构造近似函数，补上缺失值，普遍适用性强</p><p>缺点:区间边缘处的不稳定振荡，即龙格现象（<a href="https://blog.csdn.net/qq_39521554/article/details/79835492">什么是龙格现象(Runge phenomenon)？如何避免龙格现象？_图灵的猫.的博客-CSDN博客</a>）。不适合对导数有要求的题目</p><p>适用赛题：热力学温度、地形测量、定位等只追求函数值精准而不关心变化的数据。</p><p>·样条插值法</p><p>·用分段光滑的曲线去插值，光滑意味着曲线不仅连续，还要有连续的曲率。</p><p>·适用赛题：零件加工，水库水流量，图像“基线漂移”，机器人轨迹等精度要求高、没有突变都是数据</p><h3 id="异常值"><a href="#异常值" class="headerlink" title="异常值"></a><strong>异常值</strong></h3><p>·样本中明显和其他数值差异很大的数据，例如一群人的身高数据中有个3米2的</p><p>·正态分布3σ原则</p><p>·数值分布在（μ-3σ，μ+3σ）中的概率为99.73%，其中μ为平均值，σ为标准差</p><p>求解步骤：</p><p>1、计算均值u，和标准差σ</p><p>2、判断每个数据值是否在（μ-3σ，μ+3σ）内，不在则为异常值</p><p>适用题目：总体符合正态分布，例如人口数据、测量误差、生产加工质量、考试成绩等</p><p>不适用题目：总体符合其他分布，例如公交站人数排队论符合泊松分布</p><h3 id="箱型图"><a href="#箱型图" class="headerlink" title="箱型图"></a><strong>箱型图</strong></h3><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827155729518-102448789.png" alt="img"></p><p>把数据从小到大排序</p><h2 id="1-7究竟怎么建模"><a href="#1-7究竟怎么建模" class="headerlink" title="1-7究竟怎么建模"></a><strong>1-7究竟怎么建模</strong></h2><h3 id="到底什么是模型"><a href="#到底什么是模型" class="headerlink" title="到底什么是模型"></a><strong>到底什么是模型</strong></h3><p>有理论基础</p><p>有推导过程</p><p>有最终结论</p><p>以文字描述，数学公式，图像表格展现出来</p><h3 id="建模过程"><a href="#建模过程" class="headerlink" title="建模过程"></a><strong>建模过程</strong></h3><p>·一篇完整的数模论文</p><p> 包括摘要（最重要）、问题重述、模型假设和符号说明、模型建立与求解（最长）、模型的优缺点与改进方法、参考文献和附录</p><p>·摘要：最重要</p><p>·读者看完摘要，就知道论文研究的问题、用了什么方法、求得了什么结果，以及每一部分的大致步骤。</p><p>·问题重述</p><p>·将题目简述一遍即可，并不重要。注意不要复制粘贴，避免查重</p><p>·模型假设和符号说明</p><p>·好的假设能让你事半功倍</p><p>·例如某一年太阳投影问题，影子长度与地球公转也有关系，但地球公转对影长的影响远远小于自转，可在模型假设里说明“忽略公转对影长的影响”</p><p>·符号说明将论文中定义的重要符号列出表格说明即可</p><p>·模型的建立</p><p>一组公式，和对公式中每个变量的解释，就是一个模型</p><p>先查阅资料，看着资料，用自己的话复述一个简单的模型，再根据题目中的约束条件去一步步修改模型，把题目中的变量带入模型中去</p><p>·不同小问</p><p>并不是针对题目的每一问都要建立一个模型，如果每一问之间具有相似性、仅仅是增加了约束条件的话，完全可以全文建立一个模型，再针对每一小问进行模型改进。</p><p>·模型的优缺点与改进方法</p><p> 这一部分不是必须的！结合查到的文献，分析征文中模型常用在什么哪种问题，又与本文所求解的问题有何区别</p><p>·参考文献</p><p> ·</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827155801510-1104488177.png" alt="img"></p><p>·附录</p><p>·附录里要写出正文中求解时用到的代码</p><p>一定不要把网上搜到的代码直接复制粘贴</p><p>把查到的代码里变量名换一换就不会被查重</p><p>曾出现过参加国赛，再省内被推到国奖，但查重发现代码是复制的，结果被取消获奖并官网通报的先例</p><h2 id="2-1论文整体排版"><a href="#2-1论文整体排版" class="headerlink" title="2-1论文整体排版"></a><strong>2-1论文整体排版</strong></h2><p>·各级标题与正文层次分明</p><p>·一般标题级别不超过三级</p><p>​    ·正文中文字体设置宋体，英文Times New Roman</p><p>·正文排版紧凑，看起来充实，没有大片空白</p><p>·避免图片过大导致出现大片空白，且不要留有空行</p><p>·表格与图片</p><p>·表格用标准的三线表</p><p>·表的标题放在表的上方，图名放在图的下方</p><p>·公式编辑</p><p>·推荐mathpix，或用word的公式编辑器</p><p>·公式需要解释清楚每个变量的意义；重要的公式后面带有编号</p><h2 id="2-2标题怎么写"><a href="#2-2标题怎么写" class="headerlink" title="2-2标题怎么写"></a><strong>2-2标题怎么写</strong></h2><p>·读完标题，就能知道本文建的是什么模型</p><p>·简明扼要、符合规范、便于检索</p><p>·尽量使用大家都知道的词语</p><p>  ·避免出现公式、非公知公用的缩写</p><p>  ·字数限制在一行内</p><p>  ·基于xxx模型&#x2F;算法的xxx问题研究</p><p>·xxx模型就是正文里的核心模型</p><p>Xxx问题就是赛题的中心词</p><p>不要过多使用修饰词</p><p>Example：</p><p>u 基于一维热传导方程的炉温曲线机理问题研究</p><p>u 基于单目标优化模型的CT系统成像问题研究</p><p>u 基于多目标优化模型的系泊系统问题研究</p><p>u 基于动态规划补贴的出租车资源匹配问题研究</p><p>u 基于差分方程和元胞自动机的交通阻塞问题研究</p><p>u 基于回归分析的长江水质预测问题研究</p><h2 id="2-2摘要怎么写"><a href="#2-2摘要怎么写" class="headerlink" title="2-2摘要怎么写"></a><strong>2-2摘要怎么写</strong></h2><h3 id="·基本要求"><a href="#·基本要求" class="headerlink" title="·基本要求"></a><strong>·基本要求</strong></h3><p>·摘要是对论文的概括总结</p><p>·让评阅老师读完摘要，就知道本文解决的问题</p><p>建立的模型和求解结果。</p><h3 id="·注意事项"><a href="#·注意事项" class="headerlink" title="·注意事项"></a><strong>·注意事项</strong></h3><p>·不要加图或表格</p><p>·控制在3&#x2F;4页到一页，字数大约800~1100</p><p><strong>开头段</strong>：开头段模板：本文主要研究了XXX问题。根据XXX，利用XXX</p><p>模型&#x2F;方法，求解出XXX。</p><p>·第一句：说清研究的问题</p><p>·第二句：说清全文采用的模型&#x2F;算法、采取的操作</p><p>·开头段不要写详细的求解结果</p><p>示例：17年国赛A题</p><p>本文主要研究了CT系统参数标定与成像问题。根据CT系统成像原理，利</p><p>用radon变换、傅立叶变换等方法，对CT系统进行参数标定，完成了未知</p><p>介质的成像并进行了去噪处理，最后分析了参数标定的精度和稳定性并</p><p>设计了新的用于参数标定的模板。</p><p><strong>针对问题一</strong>，考虑XXX，…，建立XXX模型&#x2F;利用XXX方法，…求解出XXX。</p><p>中间段模板：针对问题一，考虑&#x2F;根据XXX，…，建立XXX</p><p>模型&#x2F;利用XXX方法，…求解出XXX。</p><p>一定要写清结果！！！</p><p>·优化类、预测类和物理类的题目，要明确写清数值</p><p>·要求提供建议或评价的题目，写要明确写清结论和数据依据，但不</p><p>要有表格；数据过多可说明数据见附录</p><p>示例：17年国赛A题</p><p>针对问题二和问题三，根据数字图像处理技术和滤波器原理，利用不同空</p><p>域特征的区域对应着频率平面中的不同区域的特点，在已知接收信息的情</p><p>况下，利用傅立叶变换即可求得被测物体的吸收率、性状和位置等信息。</p><p>根据CT系统正方形托盘的几何信息，可求得附件中10个点的位置对应的吸</p><p>收率，依次为-0.0757；-0.0325；-0.0380；-0.0015；1.9827；0.0023；</p><p>0.0131; 0.0125; -0.0204; 0.0297。</p><p><strong>针对问题二</strong>，考虑XXX，……，建立XXX模型&#x2F;利用XXX方法，…求解出XXX。</p><p><strong>针对问题三</strong>，考虑XXX，….，建立XXX模型&#x2F;利用XXX方法，.….求解出XXX。</p><p><strong>总结</strong>：总结全文，继而分析下你用的模型的优点，自夸一下。</p><p>·如果写完后摘要超过一页了，可以不写</p><p>·不要累赘重复前面写过的内容</p><p>·写一些本文的特色、自夸的语句</p><p>示例：17年国赛A题</p><p>定价模型考虑了会员密集程度、任务集中度、任务难易程度等因素。任务优</p><p>化分配模型提高了任务的有效完成率，基于最大流的启发式算法计算精度高、</p><p>运算时间短等优点，高效解决了拍照任务定价问题。</p><p>示例：16年国赛B题</p><p>本文的特色在于将机理分析与多目标规划相结合，运用熵权法将多目标问题转</p><p>化为单目标问题，使得求解结果更加客观。此外，对于解空间较复杂的模型，</p><p>设计了变步长搜索算法，在保证了求解的精度的同时，极大地提高了运算的时</p><p>间复杂程度，为日后系泊系统的设计的发展提供了参考依据。</p><p>关键词：主要模型&#x2F;算法，或出现频率高的、体现论文针对的问题的词</p><p>·关键词一般4~6个</p><p>·使用的模型和算法、大家都知道的专业名词、</p><p>问题的关键词</p><p>·中间以空格分开</p><p>示例：16年国赛A题</p><p>系泊系统设计 多元非线性方程组 循环遍历法层次分析法优化模型</p><p>系泊系统设让 机理分析 最小二乘法变步长搜索算法</p><p>系泊系统设计 刚体力学方程组 多重搜索算法多目标优化</p><p>系泊系统设计 受力分析 悬链线控制模型多目标优化遗传算法</p><h2 id="2-4参考文献"><a href="#2-4参考文献" class="headerlink" title="2-4参考文献"></a><strong>2-4参考文献</strong></h2><p>·引用文献或公开资料都必须按规范列出参考文献并在正文对应处标注[1]快捷键是<em>ctrl+shift+&#x3D;</em></p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827155944923-1784979107.png" alt="img"></p><p>·参考文献不用自己写</p><p>在知网搜索文献后，点击最右侧的引用，复制粘贴即可</p><p>·取出首行缩进，按正文出现次序修改编号</p><p>·在正文对应部分添加右上角角标</p><p>·如果需要用到博客等网站上公开的内容，可以借鉴，但不要照抄</p><p>·用自己的话复述后，就不必加入参考文献</p><p>·虽然一些博客内容确实精彩，但学术论文引用网上公开博客显得掉价</p><h2 id="2-6学术范儿的三线表"><a href="#2-6学术范儿的三线表" class="headerlink" title="2-6学术范儿的三线表"></a><strong>2-6学术范儿的三线表</strong></h2><p>·三线表顾名思义，总共三条线的表</p><p>·表格第一行的撒花姑娘下设置横线，最后一行的下端设置横线；</p><p>·表的标题写在表的上方，且带有序号</p><p>·写表的标题时，采用“插入题注”，表的序号会自动更新</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827160000654-507694410.png" alt="img"></p><h3 id="三线表样式模版"><a href="#三线表样式模版" class="headerlink" title="三线表样式模版"></a><strong>三线表样式模版</strong></h3><p>·选择某表格后，右键点击表格设计工具栏的样式，选择修改表格样式</p><p>·选择将样式应用于“整个表格”，先选择无框线，再选择上框线和下框线；</p><p>·设置“格式-表格属性-居中”；表格内容设置“表格布局-对齐方式-水平居中对齐”</p><p>注：在wps中先全选表格右击，点击表格属性，选择边框与底纹，点无，然后选择上下两条线；后选择第一行表格再增加一条线</p><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><p>表 1</p><h2 id="2-7高级图片的绘制"><a href="#2-7高级图片的绘制" class="headerlink" title="2-7高级图片的绘制"></a><strong>2-7高级图片的绘制</strong></h2><h3 id="基本要求"><a href="#基本要求" class="headerlink" title="基本要求"></a><strong>基本要求</strong></h3><p>·展示思路，形象地展现结果，提高逼格</p><p>·图的标题要放在下方，且带有编号（表上图下)</p><p>·注意排版，要无首行缩进，居中对齐</p><h3 id="常见作图软件"><a href="#常见作图软件" class="headerlink" title="常见作图软件"></a><strong>常见作图软件</strong></h3><p>·最简单：PPT、Excle、AxGlyph、Origin、visio</p><p>·编程类：Python、MATLAB、SPSS</p><p>·专业类：COMSOL（物理）、CAD（工程制图）、Maplnfo（地理信息）</p><p>·非学术类：ProcessOn、亿图、Xmind</p><p><strong>万能神器</strong>：ECharts，由JavaScript实现的开源可视化库，功能齐全</p><h3 id="太多了不知道该选哪个-MATLAB足够解决一切！"><a href="#太多了不知道该选哪个-MATLAB足够解决一切！" class="headerlink" title="太多了不知道该选哪个?MATLAB足够解决一切！"></a><strong>太多了不知道该选哪个?MATLAB足够解决一切！</strong></h3><p>·对于小白，有图最好，但如果做不出来，也不必刻意为了作图而去作图</p><h3 id="流程图、思路图"><a href="#流程图、思路图" class="headerlink" title="流程图、思路图"></a><strong>流程图、思路图</strong></h3><p>展示对问题的分析、模型或算法的思路</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827160029030-7846020.png" alt="img"></p><h3 id="函数关系图"><a href="#函数关系图" class="headerlink" title="函数关系图"></a><strong>函数关系图</strong></h3><p>·常用Excel、matlab、axglyph、origin；注意不同曲线颜色设置不一样，带图例</p><p>·整体背景白底黑线</p><h3 id="地理空间图"><a href="#地理空间图" class="headerlink" title="地理空间图"></a><strong>地理空间图</strong></h3><p>·涉及空间分布等</p><p>·Maplnfo、FineBl软件；Echarts开源可视化库；或者Excel做好的宏包</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827160041199-176142800.png" alt="img"></p><h2 id="2-8巧用分页符"><a href="#2-8巧用分页符" class="headerlink" title="2-8巧用分页符"></a><strong>2-8巧用分页符</strong></h2><p>摘要页使用分页符</p><p>·分页符所在的页中，该符号后面的内容都被推到下一页去</p><p>·使用分页符能保证前后页格式一致</p><p>·但注意和分节符区分开，分节符会重新开启“第一页”，例如页脚重新编号</p><p>·一般是隐藏的，在word页面看不到</p><p>·word功能区中“文件-选项一显示”，把“空格”勾选，就能显示出来</p><p>·摘要页末尾使用分页符</p><p>·可保证摘要页始终只有摘要、无论怎么删改，后面的内容不会到本页来</p><p>·Word功能区的“插入-分页”；或者在“布局一分隔符一分页符”</p><h2 id="3-1matlab界面与基本操作"><a href="#3-1matlab界面与基本操作" class="headerlink" title="3-1matlab界面与基本操作"></a><strong>3-1matlab界面与基本操作</strong></h2><p>矩阵实验室，数据是以矩阵的形式存在，强大的数学软件</p><p><img src="https://img2023.cnblogs.com/blog/3217736/202308/3217736-20230827160050376-392143051.png" alt="img"></p><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a><strong>基本操作</strong></h3><h3 id="·在命令行输入指令"><a href="#·在命令行输入指令" class="headerlink" title="·在命令行输入指令"></a><strong>·在命令行输入指令</strong></h3><p>·输入完指令后，敲回车就执行</p><h4 id="·在脚本文件中编写程序后运行"><a href="#·在脚本文件中编写程序后运行" class="headerlink" title="·在脚本文件中编写程序后运行"></a><strong>·在脚本文件中编写程序后运行</strong></h4><p>·脚本文件，就是存放代码的文件，尾缀.m</p><p>·实时脚本文件界面更加方便，把结果实时显示在代码旁边，推荐使用</p><h4 id="·在函数文件中编写程序，然后在脚本文件中调用"><a href="#·在函数文件中编写程序，然后在脚本文件中调用" class="headerlink" title="·在函数文件中编写程序，然后在脚本文件中调用"></a><strong>·在函数文件中编写程序，然后在脚本文件中调用</strong></h4><p>·函数文件相当于做好一个工具，以后用到的时候直接调用，尾缀也是.m</p><p>·有固定格式,例如：function[sigma,theta,x,y,final res]&#x3D;Simple(f,a,b,index)</p><h4 id="·符号"><a href="#·符号" class="headerlink" title="·符号"></a><strong>·符号</strong></h4><p>·注释：%后面写的内容都是注释</p><p>·分号：写完一行代码，该行末尾加个分号，会执行计算，但不在命令行窗口中显示输出</p><p>·命令行输入：clc(清空命令行），clear(清空工作区)，按上方向键调用历史命令(很方便）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-0&quot;&gt;&lt;a href=&quot;#1-0&quot; class=&quot;headerlink&quot; title=&quot;1-0&quot;&gt;&lt;/a&gt;1-0&lt;/h2&gt;&lt;p&gt;论文写作 matlab入门 数据预处理 公示编辑 图与表格 画图 常见函数 编程语法 函数与脚本&lt;/p&gt;
&lt;p&gt;赛题: 优化类 预测</summary>
      
    
    
    
    
    <category term="学习" scheme="https://helloworldhzj.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>pwn做题总结</title>
    <link href="https://helloworldhzj.github.io/2023/10/28/pwn%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>https://helloworldhzj.github.io/2023/10/28/pwn%E5%81%9A%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2023-10-28T07:59:10.000Z</published>
    <updated>2023-10-28T08:05:48.317Z</updated>
    
    <content type="html"><![CDATA[<p>checkesec</p><p>file</p><p>./</p><p>gdb</p><p>chmod 777 文件名</p><p>Docker是一种用于开发、交付和运行应用程序的开源平台。它利用容器化技术，可以将应用程序及其所有依赖项打包成一个独立的、可移植的容器。这个容器可以在任何支持Docker的环境中运行，无论是开发者的本地计算机、测试环境还是生产服务器。</p><p>以下是Docker的一些主要用途和好处：</p><p>1. **环境一致性：** Docker允许开发者在开发、测试和生产环境之间保持一致的运行环境。这有助于避免因环境差异而导致的问题。</p><p>2. **轻量级：** 容器是轻量级的，因为它们共享主机操作系统的内核，而不是像虚拟机一样运行完整的操作系统。</p><p>3. **快速部署：** Docker容器可以在几秒钟内启动，从而实现快速部署和扩展应用程序。</p><p>4. **隔离性：** 每个Docker容器都运行在独立的环境中，因此应用程序和其依赖项的任何变化不会影响其他容器或主机系统。</p><p>5. **可移植性：** Docker容器可以在任何支持Docker的平台上运行，无需担心依赖项和配置的问题。</p><p>6. **版本控制：** 应用程序和其依赖项可以被打包成一个镜像，类似于一个快照，这使得版本控制和回滚变得更加容易。</p><p>7. **弹性伸缩：** Docker容器可以通过容器编排工具（如Kubernetes）自动进行弹性伸缩，根据负载自动添加或删除容器实例。</p><p>8. **资源利用率：** 由于容器共享操作系统内核，所以它们的资源利用率更高，相比之下虚拟机通常需要更多的资源。</p><p>Docker的生态系统非常丰富，包括Docker Hub（一个容器镜像的共享平台）、Docker Compose（用于定义和运行多个容器的工具）和容器编排平台（如Kubernetes和Docker Swarm）。这些工具共同构建了现代应用程序开发和部署的基础架构。</p><p>________________________________________________________________________________________________________________________________________________________________________________</p><p>指令流通常指的是计算机程序中的一系列指令或操作，这些指令按照顺序执行，以完成特定的任务或功能。在计算机科学中，程序被编写成一系列指令，这些指令告诉计算机要执行的操作，从而实现所需的任务。</p><p>指令流的执行顺序通常是线性的，从程序的起始点开始，逐步按照指令的顺序执行，直至程序结束。每条指令可能是一条基本操作，也可能是跳转到其他部分的指令，从而在程序的执行过程中实现不同的控制流。</p><p>在现代计算机体系结构中，指令流由处理器（CPU）执行。处理器从内存中读取指令，解码并执行它们，然后根据需要更新内存中的数据。指令流的执行速度取决于处理器的性能以及程序的复杂性。</p><p>总之，指令流是计算机程序中一系列按照特定顺序执行的指令，用于实现特定任务或功能。它是计算机执行操作的基本单位之一。</p><p>在学习ret2syscall中</p><p>ROPgadget –binary rop –ropchain</p><p>这个命令</p><p>payload直接自动生成,仔细阅读一下自动生成的，发现就是都是利用片段拼接，而且只调用了一次int 0x80，调用的这次也是咱们那个只能用一次的int 0x80的那个地址。这种直接生成的payload一般都比较长，适用于gets函数，题是read，限制长度就不能用.</p><p>这串代码是使用ROPgadget工具的命令行参数，用于执行ROP gadget的分析和ROP链的生成。</p><p><code>--binary rop</code>：指定要分析的二进制文件的路径，这里的”rop”是二进制文件的名称。</p><p><code>--ropchain</code>：指示ROPgadget生成ROP链。</p><p>因此，该命令的含义是告诉ROPgadget工具分析名为”rop”的二进制文件，并生成相应的ROP链。具体来说，ROPgadget将扫描该二进制文件，识别其中的ROP gadget，并使用这些ROP gadget构建一个可以执行特定任务的ROP链，例如绕过内存保护机制或执行恶意操作。</p><p>请注意，这只是一个命令行参数示例，实际上还可能需要其他参数和选项来定制分析和生成ROP链的行为。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;checkesec&lt;/p&gt;
&lt;p&gt;file&lt;/p&gt;
&lt;p&gt;./&lt;/p&gt;
&lt;p&gt;gdb&lt;/p&gt;
&lt;p&gt;chmod 777 文件名&lt;/p&gt;
&lt;p&gt;Docker是一种用于开发、交付和运行应用程序的开源平台。它利用容器化技术，可以将应用程序及其所有依赖项打包成一个独立的、可移植的容</summary>
      
    
    
    
    
    <category term="网络安全" scheme="https://helloworldhzj.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="https://helloworldhzj.github.io/2023/10/28/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>https://helloworldhzj.github.io/2023/10/28/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-10-28T07:35:29.000Z</published>
    <updated>2023-10-28T07:36:17.151Z</updated>
    
    <content type="html"><![CDATA[<p>1111</p><p>AS的AS的 AWd</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1111&lt;/p&gt;
&lt;p&gt;AS的AS的 AWd&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="blog" scheme="https://helloworldhzj.github.io/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://helloworldhzj.github.io/2023/10/28/hello-world/"/>
    <id>https://helloworldhzj.github.io/2023/10/28/hello-world/</id>
    <published>2023-10-28T06:41:19.806Z</published>
    <updated>2023-10-28T06:41:19.806Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
